{"version":3,"sources":["components/Heading/index.jsx","components/Heading/constants.js","components/Level/selectors.js","components/Level/constants.js","components/App/constants.js","components/App/selectors.js","components/Level/actions.js","utils/generator.js","components/App/actions.js","utils/utils.js","components/Cell/index.jsx","components/Pin/index.jsx","components/Level/index.jsx","components/Button/index.jsx","components/Modal/index.jsx","components/Modal/constants.js","components/App/index.jsx","components/StartScreen/constants.js","components/StartScreen/actions.js","components/Alert/index.jsx","components/StartScreen/index.jsx","components/Router/index.jsx","components/App/reducers.js","components/Level/reducers.js","store/index.js","serviceWorker.js","index.js"],"names":["Heading","className","getLevel","level","getLevelSize","createGetSelector","getLevelCells","getLevelStart","allDirections","difficulty","getApp","app","getAppPosition","getAppDifficulty","getAppModalStatus","getAppAlertOpened","getAppLoadedFromStorage","initializeLevel","levelObject","type","payload","isAdjacentCellNotVisited","index","forbidden","visited","unvisited","levelLength","direction","oppositeDirection","includes","push","recursiveBacktrack","stack","currentIndex","cells","size","length","leftIndex","rightIndex","topIndex","bottomIndex","isFirstColumn","isLastColumn","isFirstRow","Math","floor","isLastRow","pop","randomCell","random","randomCellIndex","randomCellDirection","randomCellOppositeDirection","allowedDirections","generateMaze","difficultyLevel","pow","i","x","y","coordinates","key","isStart","isEnd","start","end","setCurrentPosition","positionObj","position","updateCurrentPosition","startPos","dispatch","getState","levelStartPos","toggleModal","status","isModalOpened","setLoadedStatus","isLoadedFromStorage","areObjectsEqual","obj1","obj2","JSON","stringify","Cell","classesString","mapStateToProps","createPropsSelector","levelSize","appPosition","connect","percentage","leftPercentage","topPercentage","windowWidth","window","outerWidth","computedLeft","LEVEL_PADDING","computedTop","getPositionCoordinates","computedStyles","transform","style","Level","handleEvent","throttle","bind","trailing","updatePosition","this","props","levelCells","currentCell","find","cell","nextCell","isAllowedDirection","setTimeout","event","expression","keyCode","dir","toLowerCase","leftValue","rightValue","upValue","downValue","document","addEventListener","prevProps","levelStart","removeEventListener","onSwiped","delta","preventDefaultTouchmoveEvent","trackTouch","trackMouse","rotationAngle","map","classesList","join","React","Component","mapDispatchToProps","Button","text","clickHandler","href","customClasses","classNames","Boolean","to","onClick","Modal","closeModal","loadNextLevel","App","handleSaveGame","startGame","loadGame","saveGame","history","localStorage","setItem","parse","getItem","menuLinks","id","label","action","toggleAlert","isAlertOpened","Alert","closeAlert","StartScreen","handleButtonClick","setDifficulty","Fragment","Router","exact","path","component","appReducer","state","Immutable","Map","merge","levelReducer","rootReducer","combineReducers","composeEnchancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","isLocalhost","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","origin","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.608fbff9.chunk.js","sourcesContent":["import React from 'react'\nimport { headingTitle, headingSubtitle } from './constants'\n\nconst Heading = () => (\n\t<div className=\"heading\">\n\t\t<h1 className=\"heading__title\">{headingTitle}</h1>\n\n\t\t<h3 className=\"heading__subtitle\">{headingSubtitle}</h3>\n\t</div>\n)\n\nexport default Heading\n","export const headingTitle = 'Welcome to the Maze!'\nexport const headingSubtitle =\n\t'Use the ARROW keys or SWIPE to navigate and escape through the exit at the bottom.'\n","import { createGetSelector } from 'reselect-immutable-helpers'\n\nexport const getLevel = ({ level }) => level\nexport const getLevelSize = createGetSelector(getLevel, 'size')\nexport const getLevelCells = createGetSelector(getLevel, 'cells')\nexport const getLevelStart = createGetSelector(getLevel, 'start')\nexport const getLevelEnd = createGetSelector(getLevel, 'end')\n","export const INITIALIZE_LEVEL = 'INITIALIZE_LEVEL'\nexport const allDirections = ['left', 'right', 'up', 'down']\nexport const LEFT_ARROW_KEYCODE = 37\nexport const RIGHT_ARROW_KEYCODE = 39\nexport const UP_ARROW_KEYCODE = 38\nexport const DOWN_ARROW_KEYCODE = 40\nexport const LEFT_STRING = 'left'\nexport const RIGHT_STRING = 'right'\nexport const UP_STRING = 'up'\nexport const DOWN_STRING = 'down'\nexport const TRANSITION_DELAY = 150\nexport const LEVEL_WIDTH = 560\nexport const LEVEL_PADDING = 20\n","export const SET_CURRENT_POSITION = 'SET_CURRENT_POSITION'\nexport const TOGGLE_MODAL = 'TOGGLE_MODAL'\nexport const SET_LOADED_STATUS = 'SET_LOADED_STATUS'\nexport const SET_DIFFICULTY_LEVEL = 'SET_DIFFICULTY_LEVEL'\nexport const difficulty = {\n\teasy: 'EASY',\n\tnormal: 'NORMAL',\n\tmedium: 'MEDIUM',\n\thard: 'HARD',\n\tinsane: 'INSANE'\n}\n","import { createGetSelector } from 'reselect-immutable-helpers'\n\nexport const getApp = ({ app }) => app\nexport const getAppPosition = createGetSelector(getApp, 'position')\nexport const getAppDifficulty = createGetSelector(getApp, 'difficulty')\nexport const getAppModalStatus = createGetSelector(getApp, 'isModalOpened')\nexport const getAppAlertOpened = createGetSelector(getApp, 'isAlertOpened')\nexport const getAppLoadedFromStorage = createGetSelector(\n\tgetApp,\n\t'isLoadedFromStorage'\n)\n","import { INITIALIZE_LEVEL } from './constants'\n\nexport const initializeLevel = levelObject => ({\n\ttype: INITIALIZE_LEVEL,\n\tpayload: levelObject\n})\n","import { difficulty } from '../components/App/constants'\n\n/**\n * if adjacent cell is not visited it's cell index,\n * direction and oppositeDirection are added to\n * the unvisited array\n *\n * @param {Number} index \t\t\t\t\tIndex of adjacent cell to be checked\n * @param {Boolean} forbidden \t\t\t\tBoolean of the forbidden column/row(for instance if the current cell is in the first column the adjacent cell on the left of it is forbidden)\n * @param {Array} visited \t\t\t\t\tArray of visited indexes we use to check if the current index was visited\n * @param {Array} unvisited \t\t\t\tArray of unvisited indexes\n * @param {Number} levelLength \t\t\t\tTotal number of cells\n * @param {String} direction \t\t\t\tDirection of movement from the current cell to the selected adjacent cell\n * @param {String} oppositeDirection \t\tDirection of movement from the selected adjacent cell to the current cell\n */\nconst isAdjacentCellNotVisited = (\n\tindex,\n\tforbidden,\n\tvisited,\n\tunvisited,\n\tlevelLength,\n\tdirection,\n\toppositeDirection\n) => {\n\tif (\n\t\tindex >= 0 &&\n\t\tindex < levelLength &&\n\t\t!forbidden &&\n\t\t!visited.includes(index)\n\t) {\n\t\tunvisited.push({\n\t\t\tindex,\n\t\t\tdirection,\n\t\t\toppositeDirection\n\t\t})\n\t}\n}\n\n/**\n * `Recursive Backtracking` algorithm to randomly\n * generate a maze\n *\n * @param {Array} stack \t\t\t\t\tArray of indexes to backtrack generator movement\n * @param {Array} visited \t\t\t\t\tArray of visited indexes\n * @param {Number} currentIndex \t\t\tCurrently selected cell index\n * @param {Array} cells \t\t\t\t\tArray of cell objects\n * @param {Number} size \t\t\t\t\tThe size of the maze, for example 10 rows and 10 cols means size 10\n * @param {Number} levelLength \t\t\t\tTotal number of cells in the maze, for example 10 rows and 10 cols means 100 cells in total\n */\nconst recursiveBacktrack = (\n\tstack,\n\tvisited,\n\tcurrentIndex,\n\tcells,\n\tsize,\n\tlevelLength\n) => {\n\tif (stack.length > 0) {\n\t\tconst unvisited = []\n\n\t\tconst leftIndex = currentIndex - 1\n\t\tconst rightIndex = currentIndex + 1\n\t\tconst topIndex = currentIndex - size\n\t\tconst bottomIndex = currentIndex + size\n\t\tconst isFirstColumn = currentIndex % size === 0\n\t\tconst isLastColumn = currentIndex % size === size - 1\n\t\tconst isFirstRow = Math.floor(currentIndex / size) === 0\n\t\tconst isLastRow = Math.floor(currentIndex / size) === size - 1\n\n\t\t// Check if adjacent left cell is not visited\n\t\tisAdjacentCellNotVisited(\n\t\t\tleftIndex,\n\t\t\tisFirstColumn,\n\t\t\tvisited,\n\t\t\tunvisited,\n\t\t\tlevelLength,\n\t\t\t'left',\n\t\t\t'right'\n\t\t)\n\n\t\t// Check if adjacent right cell is not visited\n\t\tisAdjacentCellNotVisited(\n\t\t\trightIndex,\n\t\t\tisLastColumn,\n\t\t\tvisited,\n\t\t\tunvisited,\n\t\t\tlevelLength,\n\t\t\t'right',\n\t\t\t'left'\n\t\t)\n\n\t\t// Check if adjacent top cell is not visited\n\t\tisAdjacentCellNotVisited(\n\t\t\ttopIndex,\n\t\t\tisFirstRow,\n\t\t\tvisited,\n\t\t\tunvisited,\n\t\t\tlevelLength,\n\t\t\t'up',\n\t\t\t'down'\n\t\t)\n\n\t\t// Check if adjacent bottom cell is not visited\n\t\tisAdjacentCellNotVisited(\n\t\t\tbottomIndex,\n\t\t\tisLastRow,\n\t\t\tvisited,\n\t\t\tunvisited,\n\t\t\tlevelLength,\n\t\t\t'down',\n\t\t\t'up'\n\t\t)\n\n\t\t// If dead end is encountered start back tracking by popping\n\t\t// off the last visited cell from the stack array\n\t\t// until you find a cell with unvisited adjacent cells or\n\t\t// until stack array is empty\n\t\tif (unvisited.length < 1) {\n\t\t\tstack.pop()\n\t\t\tcurrentIndex = stack[stack.length - 1]\n\n\t\t\tif (stack.length > 0) {\n\t\t\t\trecursiveBacktrack(\n\t\t\t\t\tstack,\n\t\t\t\t\tvisited,\n\t\t\t\t\tcurrentIndex,\n\t\t\t\t\tcells,\n\t\t\t\t\tsize,\n\t\t\t\t\tlevelLength\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\n\t\tif (stack.length === 0) {\n\t\t\treturn\n\t\t}\n\n\t\t// Take random cell from the unvisited adjacent cells array\n\t\tconst randomArrayIndex = Math.floor(Math.random() * unvisited.length)\n\t\tconst randomCell = unvisited[randomArrayIndex]\n\t\tconst randomCellIndex = randomCell.index\n\t\tconst randomCellDirection = randomCell.direction\n\t\tconst randomCellOppositeDirection = randomCell.oppositeDirection\n\n\t\t// Update level cell using the randomly chosen cell index above\n\t\tcells[currentIndex].allowedDirections.push(randomCellDirection)\n\t\tcells[randomCellIndex].allowedDirections.push(\n\t\t\trandomCellOppositeDirection\n\t\t)\n\n\t\t// Update visited cells array and current cell index\n\t\tcurrentIndex = randomCellIndex\n\t\tvisited.push(currentIndex)\n\t\tstack.push(currentIndex)\n\n\t\trecursiveBacktrack(\n\t\t\tstack,\n\t\t\tvisited,\n\t\t\tcurrentIndex,\n\t\t\tcells,\n\t\t\tsize,\n\t\t\tlevelLength\n\t\t)\n\t}\n}\n\n/**\n * Generate maze based on provided difficulty\n * using the `Recursive Backtracking` algorithm\n *\n * @param {String} difficultyLevel \t\t\tDifficulty level, for example 'EASY'\n */\nexport const generateMaze = (difficultyLevel = difficulty.easy) => {\n\tlet size = 10\n\tlet cells = []\n\tlet visited = []\n\tlet stack = []\n\n\t// Set level size based on selected difficulty\n\tswitch (difficultyLevel) {\n\t\tcase difficulty.easy:\n\t\t\tsize = 10\n\t\t\tbreak\n\t\tcase difficulty.normal:\n\t\t\tsize = 14\n\t\t\tbreak\n\t\tcase difficulty.medium:\n\t\t\tsize = 18\n\t\t\tbreak\n\t\tcase difficulty.hard:\n\t\t\tsize = 22\n\t\t\tbreak\n\t\tcase difficulty.insane:\n\t\t\tsize = 26\n\t\t\tbreak\n\t\tdefault:\n\t\t\tbreak\n\t}\n\n\tconst levelLength = Math.pow(size, 2)\n\tconst currentIndex = Math.floor(Math.random() * levelLength)\n\n\t// Generate level cells\n\tfor (let i = 0; i < levelLength; i++) {\n\t\tconst x = i % size\n\t\tconst y = Math.floor(i / size)\n\n\t\tcells[i] = {\n\t\t\tcoordinates: {\n\t\t\t\tx,\n\t\t\t\ty\n\t\t\t},\n\t\t\tallowedDirections: [],\n\t\t\tkey: `${x}-${y}`\n\t\t}\n\n\t\tif (x === 0 && y === 0) {\n\t\t\tcells[i].isStart = true\n\t\t}\n\n\t\tif (x === size - 1 && y === size - 1) {\n\t\t\tcells[i].isEnd = true\n\t\t}\n\t}\n\n\t// Update level cells based on `Recursive Backtracker algorithm`\n\tvisited.push(currentIndex)\n\tstack.push(currentIndex)\n\n\trecursiveBacktrack(stack, visited, currentIndex, cells, size, levelLength)\n\n\treturn {\n\t\tsize: size,\n\t\tcells: cells,\n\t\tstart: {\n\t\t\tcoordinates: {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0\n\t\t\t}\n\t\t},\n\t\tend: {\n\t\t\tcoordinates: {\n\t\t\t\tx: size - 1,\n\t\t\t\ty: size - 1\n\t\t\t}\n\t\t}\n\t}\n}\n","import {\n\tSET_CURRENT_POSITION,\n\tTOGGLE_MODAL,\n\tSET_LOADED_STATUS,\n\tSET_DIFFICULTY_LEVEL\n} from './constants'\nimport { getAppPosition } from './selectors'\nimport { initializeLevel } from '../Level/actions'\nimport { getLevel, getLevelStart } from '../Level/selectors'\nimport { generateMaze } from '../../utils/generator'\n\nexport const setCurrentPosition = positionObj => ({\n\ttype: SET_CURRENT_POSITION,\n\tpayload: {\n\t\tposition: positionObj\n\t}\n})\n\nexport const updateCurrentPosition = startPos => (dispatch, getState) => {\n\tconst levelStartPos = startPos || getLevelStart(getState()).coordinates\n\treturn dispatch(setCurrentPosition(levelStartPos))\n}\n\nexport const toggleModal = (status = false) => ({\n\ttype: TOGGLE_MODAL,\n\tpayload: {\n\t\tisModalOpened: status\n\t}\n})\n\nexport const setLoadedStatus = (status = false) => ({\n\ttype: SET_LOADED_STATUS,\n\tpayload: {\n\t\tisLoadedFromStorage: status\n\t}\n})\n\nexport const setDifficulty = difficultyLevel => ({\n\ttype: SET_DIFFICULTY_LEVEL,\n\tpayload: {\n\t\tdifficulty: difficultyLevel\n\t}\n})\n\nexport const startGame = (difficultyLevel = 'EASY') => dispatch => {\n\tdispatch(initializeLevel(generateMaze(difficultyLevel)))\n\tdispatch(updateCurrentPosition())\n\tdispatch(toggleModal(false))\n}\n\nexport const saveGame = history => (dispatch, getState) => {\n\tconst level = getLevel(getState())\n\tconst position = getAppPosition(getState())\n\n\tif (localStorage) {\n\t\tlocalStorage.setItem('level', JSON.stringify(level))\n\t\tlocalStorage.setItem('position', JSON.stringify(position))\n\t\thistory.push('/')\n\t}\n}\n\nexport const loadGame = () => dispatch => {\n\tconst level = JSON.parse(localStorage.getItem('level'))\n\tconst position = JSON.parse(localStorage.getItem('position'))\n\n\tdispatch(initializeLevel(level))\n\tdispatch(updateCurrentPosition(position))\n\tdispatch(toggleModal(false))\n}\n","import { LEVEL_WIDTH, LEVEL_PADDING } from '../components/Level/constants'\n\nexport const getPositionCoordinates = (levelSize, { x, y }) => {\n\tconst percentage = 1 / levelSize\n\tconst leftPercentage = x * percentage + percentage / 2\n\tconst topPercentage = y * percentage + percentage / 2\n\tconst windowWidth = window.outerWidth\n\tconst computedLeft =\n\t\twindowWidth < LEVEL_WIDTH\n\t\t\t? leftPercentage * (windowWidth - LEVEL_PADDING * 2)\n\t\t\t: leftPercentage * LEVEL_WIDTH\n\tconst computedTop =\n\t\twindowWidth < LEVEL_WIDTH\n\t\t\t? topPercentage * (windowWidth - LEVEL_PADDING * 2)\n\t\t\t: topPercentage * LEVEL_WIDTH\n\n\treturn {\n\t\tcomputedLeft,\n\t\tcomputedTop\n\t}\n}\n\nexport const areObjectsEqual = (obj1, obj2) =>\n\tJSON.stringify(obj1) === JSON.stringify(obj2)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Cell = ({ classesString }) => (\n\t<div className={`level__cell ${classesString}`}></div>\n)\n\nCell.propTypes = {\n\tclassesString: PropTypes.string\n}\n\nexport default Cell\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { createPropsSelector } from 'reselect-immutable-helpers'\n\nimport { getPositionCoordinates } from '../../utils/utils'\n\nimport { getLevelSize } from '../Level/selectors'\nimport { getAppPosition } from '../App/selectors'\n\nconst Pin = ({ levelSize, appPosition }) => {\n\tconst { computedLeft, computedTop } = getPositionCoordinates(\n\t\tlevelSize,\n\t\tappPosition\n\t)\n\n\tconst computedStyles = {\n\t\ttransform: `translate3d(${computedLeft}px, ${computedTop}px, 0)`\n\t}\n\n\treturn <div className=\"level__pin\" style={computedStyles}></div>\n}\n\nPin.propTypes = {\n\tlevelSize: PropTypes.number,\n\tappPosition: PropTypes.shape({\n\t\tx: PropTypes.number,\n\t\ty: PropTypes.number\n\t})\n}\n\nconst mapStateToProps = createPropsSelector({\n\tlevelSize: getLevelSize,\n\tappPosition: getAppPosition\n})\n\nexport default connect(mapStateToProps)(Pin)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { createPropsSelector } from 'reselect-immutable-helpers'\nimport throttle from 'lodash.throttle'\nimport { Swipeable } from 'react-swipeable'\n\nimport { getLevelSize, getLevelCells, getLevelStart } from './selectors'\nimport {\n\tallDirections,\n\tLEFT_ARROW_KEYCODE,\n\tRIGHT_ARROW_KEYCODE,\n\tUP_ARROW_KEYCODE,\n\tDOWN_ARROW_KEYCODE,\n\tLEFT_STRING,\n\tRIGHT_STRING,\n\tUP_STRING,\n\tDOWN_STRING,\n\tTRANSITION_DELAY\n} from './constants'\n\nimport {\n\tupdateCurrentPosition,\n\ttoggleModal,\n\tsetCurrentPosition\n} from '../App/actions'\nimport { getAppPosition, getAppLoadedFromStorage } from '../App/selectors'\nimport { areObjectsEqual } from '../../utils/utils'\n\nimport Cell from '../Cell'\nimport Pin from '../Pin'\n\nclass Level extends React.Component {\n\tconstructor() {\n\t\tsuper()\n\n\t\tthis.handleEvent = throttle(\n\t\t\tthis.handleEvent.bind(this),\n\t\t\tTRANSITION_DELAY,\n\t\t\t{ trailing: false }\n\t\t)\n\t\tthis.updatePosition = throttle(\n\t\t\tthis.updatePosition.bind(this),\n\t\t\tTRANSITION_DELAY,\n\t\t\t{\n\t\t\t\ttrailing: false\n\t\t\t}\n\t\t)\n\t}\n\n\tupdatePosition(positionObj, direction) {\n\t\tconst {\n\t\t\tappPosition,\n\t\t\tupdateCurrentPosition,\n\t\t\tlevelCells,\n\t\t\ttoggleModal\n\t\t} = this.props\n\n\t\tconst currentCell = levelCells.find(cell =>\n\t\t\tareObjectsEqual(cell.coordinates, appPosition)\n\t\t)\n\n\t\tconst nextCell = levelCells.find(cell =>\n\t\t\tareObjectsEqual(cell.coordinates, positionObj)\n\t\t)\n\n\t\tconst isAllowedDirection = currentCell.allowedDirections.includes(\n\t\t\tdirection\n\t\t)\n\n\t\tconst isEnd = nextCell ? nextCell.isEnd : false\n\n\t\tif (isAllowedDirection) {\n\t\t\t// Change player position\n\t\t\tupdateCurrentPosition(positionObj)\n\n\t\t\tif (isEnd) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\ttoggleModal(true)\n\t\t\t\t}, TRANSITION_DELAY)\n\t\t\t}\n\t\t}\n\t}\n\n\thandleEvent(event) {\n\t\tconst { appPosition } = this.props\n\t\tconst expression = event.keyCode || event.dir.toLowerCase()\n\t\tconst leftValue = event.keyCode ? LEFT_ARROW_KEYCODE : LEFT_STRING\n\t\tconst rightValue = event.keyCode ? RIGHT_ARROW_KEYCODE : RIGHT_STRING\n\t\tconst upValue = event.keyCode ? UP_ARROW_KEYCODE : UP_STRING\n\t\tconst downValue = event.keyCode ? DOWN_ARROW_KEYCODE : DOWN_STRING\n\n\t\t// Update position based on pressed arrow keys\n\t\tswitch (expression) {\n\t\t\tcase leftValue:\n\t\t\t\treturn this.updatePosition(\n\t\t\t\t\t{\n\t\t\t\t\t\tx: appPosition.x - 1,\n\t\t\t\t\t\ty: appPosition.y\n\t\t\t\t\t},\n\t\t\t\t\t'left'\n\t\t\t\t)\n\t\t\tcase rightValue:\n\t\t\t\treturn this.updatePosition(\n\t\t\t\t\t{\n\t\t\t\t\t\tx: appPosition.x + 1,\n\t\t\t\t\t\ty: appPosition.y\n\t\t\t\t\t},\n\t\t\t\t\t'right'\n\t\t\t\t)\n\t\t\tcase upValue:\n\t\t\t\treturn this.updatePosition(\n\t\t\t\t\t{\n\t\t\t\t\t\tx: appPosition.x,\n\t\t\t\t\t\ty: appPosition.y - 1\n\t\t\t\t\t},\n\t\t\t\t\t'up'\n\t\t\t\t)\n\t\t\tcase downValue:\n\t\t\t\treturn this.updatePosition(\n\t\t\t\t\t{\n\t\t\t\t\t\tx: appPosition.x,\n\t\t\t\t\t\ty: appPosition.y + 1\n\t\t\t\t\t},\n\t\t\t\t\t'down'\n\t\t\t\t)\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\t// Add keyboards event listeners\n\t\tdocument.addEventListener('keydown', this.handleEvent)\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tconst {\n\t\t\tlevelStart: { coordinates },\n\t\t\tsetCurrentPosition,\n\t\t\tisLoadedFromStorage\n\t\t} = this.props\n\n\t\tif (\n\t\t\tprevProps.levelStart &&\n\t\t\tcoordinates !== prevProps.levelStart.coordinates &&\n\t\t\t!isLoadedFromStorage\n\t\t) {\n\t\t\tsetCurrentPosition(coordinates)\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\t// Remove keyboard event listeners\n\t\tdocument.removeEventListener('keydown', this.handleEvent)\n\t}\n\n\trender() {\n\t\tconst { levelSize, levelCells } = this.props\n\t\tconst swipeableConfig = {\n\t\t\tdelta: 10,\n\t\t\tpreventDefaultTouchmoveEvent: true,\n\t\t\ttrackTouch: true,\n\t\t\ttrackMouse: false,\n\t\t\trotationAngle: 0\n\t\t}\n\n\t\treturn levelCells ? (\n\t\t\t<Swipeable onSwiped={this.handleEvent} {...swipeableConfig}>\n\t\t\t\t<div className={`level level--size-${levelSize}`}>\n\t\t\t\t\t<Pin />\n\n\t\t\t\t\t{levelCells.map(({ key, allowedDirections }) => {\n\t\t\t\t\t\tlet classesString\n\t\t\t\t\t\tlet classesList = []\n\n\t\t\t\t\t\t/* eslint-disable array-callback-return */\n\t\t\t\t\t\tallDirections.map(direction => {\n\t\t\t\t\t\t\tif (!allowedDirections.includes(direction)) {\n\t\t\t\t\t\t\t\tclassesList.push(\n\t\t\t\t\t\t\t\t\t`level__cell--border-${direction}`\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tclassesString = classesList.join(' ')\n\n\t\t\t\t\t\treturn <Cell classesString={classesString} key={key} />\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</Swipeable>\n\t\t) : null\n\t}\n}\n\nLevel.propTypes = {\n\tlevel: PropTypes.object,\n\tlevelSize: PropTypes.number,\n\tlevelCells: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tkey: PropTypes.string,\n\t\t\tcoordinates: PropTypes.shape({\n\t\t\t\tx: PropTypes.number,\n\t\t\t\ty: PropTypes.number\n\t\t\t}),\n\t\t\tallowedDirections: PropTypes.array\n\t\t})\n\t),\n\tlevelStart: PropTypes.shape({\n\t\tcoordinates: PropTypes.shape({\n\t\t\tx: PropTypes.number,\n\t\t\ty: PropTypes.number\n\t\t})\n\t}),\n\tappPosition: PropTypes.shape({\n\t\tx: PropTypes.number,\n\t\ty: PropTypes.number\n\t}),\n\tupdateCurrentPosition: PropTypes.func,\n\ttoggleModal: PropTypes.func,\n\tsetCurrentPosition: PropTypes.func,\n\tisLoadedFromStorage: PropTypes.bool\n}\n\nconst mapStateToProps = createPropsSelector({\n\tlevelSize: getLevelSize,\n\tlevelCells: getLevelCells,\n\tlevelStart: getLevelStart,\n\tappPosition: getAppPosition,\n\tisLoadedFromStorage: getAppLoadedFromStorage\n})\n\nconst mapDispatchToProps = {\n\tupdateCurrentPosition,\n\ttoggleModal,\n\tsetCurrentPosition\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Level)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { Link } from 'react-router-dom'\n\nconst Button = ({ text, type, clickHandler, href }) => {\n\tconst customClasses = classNames('button', {\n\t\t[`button--${type}`]: Boolean(type)\n\t})\n\n\treturn href ? (\n\t\t<Link to={href} className={customClasses}>\n\t\t\t{text}\n\t\t</Link>\n\t) : (\n\t\t<button\n\t\t\tclassName={customClasses}\n\t\t\tonClick={clickHandler ? clickHandler : null}\n\t\t>\n\t\t\t{text}\n\t\t</button>\n\t)\n}\n\nButton.propTypes = {\n\ttext: PropTypes.string,\n\ttype: PropTypes.string,\n\tclickHandler: PropTypes.func,\n\thref: PropTypes.string\n}\n\nexport default Button\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { createPropsSelector } from 'reselect-immutable-helpers'\nimport classNames from 'classnames'\n\nimport Button from '../Button'\n\nimport { modalTitle, modalText } from './constants'\nimport { getAppModalStatus, getAppDifficulty } from '../App/selectors'\nimport { toggleModal } from '../App/actions'\nimport { initializeLevel } from '../Level/actions'\nimport { generateMaze } from '../../utils/generator'\n\nclass Modal extends React.Component {\n\tconstructor() {\n\t\tsuper()\n\n\t\tthis.closeModal = this.closeModal.bind(this)\n\t\tthis.loadNextLevel = this.loadNextLevel.bind(this)\n\t}\n\n\tcloseModal() {\n\t\tconst { toggleModal } = this.props\n\n\t\ttoggleModal(false)\n\t}\n\n\tloadNextLevel() {\n\t\tconst { initializeLevel, difficulty } = this.props\n\n\t\tinitializeLevel(generateMaze(difficulty))\n\t\tthis.closeModal()\n\t}\n\n\trender() {\n\t\tconst { isModalOpened } = this.props\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames('modal', {\n\t\t\t\t\t'modal--open': isModalOpened\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t<div className=\"modal__overlay\" onClick={this.closeModal}></div>\n\n\t\t\t\t<div className=\"modal__content\">\n\t\t\t\t\t<div className=\"modal__body\">\n\t\t\t\t\t\t<h4>{modalTitle}</h4>\n\n\t\t\t\t\t\t{modalText && <p>{modalText}</p>}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"modal__actions\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttext=\"No\"\n\t\t\t\t\t\t\ttype=\"secondary\"\n\t\t\t\t\t\t\tclickHandler={this.closeModal}\n\t\t\t\t\t\t\thref=\"/\"\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttext=\"Yes\"\n\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t\tclickHandler={this.loadNextLevel}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nModal.propTypes = {\n\tisModalOpened: PropTypes.bool,\n\ttoggleModal: PropTypes.func,\n\tinitializeLevel: PropTypes.func,\n\tdifficulty: PropTypes.string\n}\n\nconst mapStateToProps = createPropsSelector({\n\tisModalOpened: getAppModalStatus,\n\tdifficulty: getAppDifficulty\n})\n\nconst mapDispatchToProps = {\n\ttoggleModal,\n\tinitializeLevel\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal)\n","export const modalTitle = 'Congratulations, you have escaped the Maze!'\nexport const modalText = 'Do you want to play more?'\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { createPropsSelector } from 'reselect-immutable-helpers'\n\nimport Heading from '../Heading'\nimport Level from '../Level'\nimport Modal from '../Modal'\nimport Button from '../Button'\n\nimport { startGame, saveGame, loadGame, setLoadedStatus } from './actions'\nimport { getAppDifficulty, getAppLoadedFromStorage } from './selectors'\n\nclass App extends React.Component {\n\tconstructor() {\n\t\tsuper()\n\n\t\tthis.handleSaveGame = this.handleSaveGame.bind(this)\n\t}\n\n\tcomponentDidMount() {\n\t\tconst {\n\t\t\tstartGame,\n\t\t\tloadGame,\n\t\t\tdifficulty,\n\t\t\tisLoadedFromStorage\n\t\t} = this.props\n\n\t\tif (!isLoadedFromStorage) {\n\t\t\tstartGame(difficulty)\n\t\t} else {\n\t\t\tloadGame()\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tconst { setLoadedStatus } = this.props\n\n\t\tsetLoadedStatus(false)\n\t}\n\n\thandleSaveGame() {\n\t\tconst { saveGame, history } = this.props\n\n\t\tsaveGame(history)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"app\">\n\t\t\t\t<Heading />\n\t\t\t\t<Level />\n\t\t\t\t<Modal />\n\t\t\t\t<Button\n\t\t\t\t\ttext=\"Save Progress and Exit\"\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\tclickHandler={this.handleSaveGame}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nApp.propTypes = {\n\thistory: PropTypes.object,\n\tdifficulty: PropTypes.string,\n\tisLoadedFromStorage: PropTypes.bool,\n\tstartGame: PropTypes.func,\n\tsaveGame: PropTypes.func,\n\tloadGame: PropTypes.func,\n\tsetLoadedStatus: PropTypes.func\n}\n\nconst mapStateToProps = createPropsSelector({\n\tdifficulty: getAppDifficulty,\n\tisLoadedFromStorage: getAppLoadedFromStorage\n})\n\nconst mapDispatchToProps = {\n\tstartGame,\n\tsaveGame,\n\tloadGame,\n\tsetLoadedStatus\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","export const TOGGLE_ALERT = 'TOGGLE_ALERT'\nexport const startScreenTitle = 'The Maze'\nexport const menuLinks = [\n\t{\n\t\tid: 'start-new-game-easy',\n\t\tlabel: 'Start New Game - Easy',\n\t\taction: {\n\t\t\ttype: 'START',\n\t\t\tdifficulty: 'EASY'\n\t\t}\n\t},\n\t{\n\t\tid: 'start-new-game-normal',\n\t\tlabel: 'Start New Game - Normal',\n\t\taction: {\n\t\t\ttype: 'START',\n\t\t\tdifficulty: 'NORMAL'\n\t\t}\n\t},\n\t{\n\t\tid: 'start-new-game-medium',\n\t\tlabel: 'Start New Game - Medium',\n\t\taction: {\n\t\t\ttype: 'START',\n\t\t\tdifficulty: 'MEDIUM'\n\t\t}\n\t},\n\t{\n\t\tid: 'start-new-game-hard',\n\t\tlabel: 'Start New Game - Hard',\n\t\taction: {\n\t\t\ttype: 'START',\n\t\t\tdifficulty: 'HARD'\n\t\t}\n\t},\n\t{\n\t\tid: 'start-new-game-insane',\n\t\tlabel: 'Start New Game - Insane',\n\t\taction: {\n\t\t\ttype: 'START',\n\t\t\tdifficulty: 'INSANE'\n\t\t}\n\t},\n\t{\n\t\tid: 'load-game',\n\t\tlabel: 'Load Game',\n\t\taction: {\n\t\t\ttype: 'LOAD'\n\t\t}\n\t}\n]\n","import { TOGGLE_ALERT } from './constants'\n\nexport const toggleAlert = (status = false) => ({\n\ttype: TOGGLE_ALERT,\n\tpayload: {\n\t\tisAlertOpened: status\n\t}\n})\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport classNames from 'classnames'\nimport { createPropsSelector } from 'reselect-immutable-helpers'\n\nimport { toggleAlert } from '../StartScreen/actions'\nimport { getAppAlertOpened } from '../App/selectors'\n\nclass Alert extends React.Component {\n\tconstructor() {\n\t\tsuper()\n\n\t\tthis.closeAlert = this.closeAlert.bind(this)\n\t}\n\n\tcloseAlert() {\n\t\tconst { toggleAlert } = this.props\n\n\t\ttoggleAlert(false)\n\t}\n\n\trender() {\n\t\tconst { type, text, isAlertOpened } = this.props\n\t\tconst customClasses = classNames('alert', {\n\t\t\t[`alert--${type}`]: Boolean(type),\n\t\t\t'is--visible': isAlertOpened\n\t\t})\n\n\t\treturn (\n\t\t\t<div className={customClasses}>\n\t\t\t\t<div className=\"alert__content\">{text}</div>\n\n\t\t\t\t<div className=\"alert__close\" onClick={this.closeAlert}></div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nAlert.propTypes = {\n\ttype: PropTypes.string,\n\ttext: PropTypes.string,\n\ttoggleAlert: PropTypes.func,\n\tisAlertOpened: PropTypes.bool\n}\n\nconst mapStateToProps = createPropsSelector({\n\tisAlertOpened: getAppAlertOpened\n})\n\nconst mapDispatchToProps = {\n\ttoggleAlert\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Alert)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport Button from '../Button'\nimport Alert from '../Alert'\n\nimport { startScreenTitle, menuLinks } from './constants'\nimport { toggleAlert } from './actions'\nimport { setDifficulty, setLoadedStatus } from '../App/actions'\n\nclass StartScreen extends React.Component {\n\tconstructor() {\n\t\tsuper()\n\n\t\tthis.handleButtonClick = this.handleButtonClick.bind(this)\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { toggleAlert } = this.props\n\n\t\ttoggleAlert()\n\t}\n\n\thandleButtonClick(action) {\n\t\tconst {\n\t\t\tsetDifficulty,\n\t\t\tsetLoadedStatus,\n\t\t\thistory,\n\t\t\ttoggleAlert\n\t\t} = this.props\n\n\t\tswitch (action.type) {\n\t\t\tcase 'START':\n\t\t\t\tsetLoadedStatus(false)\n\t\t\t\tsetDifficulty(action.difficulty)\n\t\t\t\thistory.push('/playing')\n\t\t\t\tbreak\n\t\t\tcase 'LOAD':\n\t\t\t\tif (\n\t\t\t\t\tlocalStorage.length > 0 &&\n\t\t\t\t\tlocalStorage.getItem('level') &&\n\t\t\t\t\tlocalStorage.getItem('position')\n\t\t\t\t) {\n\t\t\t\t\tsetLoadedStatus(true)\n\t\t\t\t\thistory.push('/playing')\n\t\t\t\t} else {\n\t\t\t\t\ttoggleAlert(true)\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"start-screen\">\n\t\t\t\t\t<div className=\"start-screen__content\">\n\t\t\t\t\t\t<div className=\"start-screen__heading\">\n\t\t\t\t\t\t\t<h1>{startScreenTitle}</h1>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"start-screen__menu\">\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t{menuLinks.map(({ id, label, action }) => (\n\t\t\t\t\t\t\t\t\t<li key={id}>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\ttype=\"link\"\n\t\t\t\t\t\t\t\t\t\t\ttext={label}\n\t\t\t\t\t\t\t\t\t\t\tclickHandler={() =>\n\t\t\t\t\t\t\t\t\t\t\t\tthis.handleButtonClick(action)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<Alert type=\"warning\" text=\"Nothing to load!\" />\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nStartScreen.propTypes = {\n\tsetDifficulty: PropTypes.func,\n\tsetLoadedStatus: PropTypes.func,\n\thistory: PropTypes.object,\n\ttoggleAlert: PropTypes.func\n}\n\nconst mapDispatchToProps = {\n\tsetDifficulty,\n\tsetLoadedStatus,\n\ttoggleAlert\n}\n\nexport default connect(null, mapDispatchToProps)(StartScreen)\n","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n\nimport App from '../App'\nimport StartScreen from '../StartScreen'\n\nconst Router = () => (\n\t<BrowserRouter>\n\t\t<Switch>\n\t\t\t<Route exact path=\"/\" component={StartScreen} />\n\t\t\t<Route path=\"/playing\" component={App} />\n\t\t</Switch>\n\t</BrowserRouter>\n)\n\nexport default Router\n","import Immutable from 'immutable'\nimport {\n\tSET_CURRENT_POSITION,\n\tTOGGLE_MODAL,\n\tSET_DIFFICULTY_LEVEL,\n\tSET_LOADED_STATUS\n} from './constants'\n\nimport { TOGGLE_ALERT } from '../StartScreen/constants'\n\nconst appReducer = (state = Immutable.Map(), action) => {\n\tswitch (action.type) {\n\t\tcase SET_CURRENT_POSITION:\n\t\tcase TOGGLE_MODAL:\n\t\tcase SET_DIFFICULTY_LEVEL:\n\t\tcase SET_LOADED_STATUS:\n\t\tcase TOGGLE_ALERT:\n\t\t\treturn state.merge(action.payload)\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default appReducer\n","import Immutable from 'immutable'\nimport { INITIALIZE_LEVEL } from './constants'\n\nconst levelReducer = (state = Immutable.Map(), action) => {\n\tswitch (action.type) {\n\t\tcase INITIALIZE_LEVEL:\n\t\t\treturn state.merge(action.payload)\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default levelReducer\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport appReducer from '../components/App/reducers'\nimport levelReducer from '../components/Level/reducers'\n\nconst rootReducer = combineReducers({\n\tapp: appReducer,\n\tlevel: levelReducer\n})\n\nconst composeEnchancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(\n\trootReducer,\n\tcomposeEnchancers(applyMiddleware(thunk))\n)\n\nexport default store\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n)\n\nexport function register(config) {\n\t/* eslint-disable-next-line no-undef */\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t/* eslint-disable-next-line no-undef */\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\t/* eslint-disable-next-line no-undef */\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.')\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error)\n\t\t})\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type')\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null &&\n\t\t\t\t\tcontentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload()\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t)\n\t\t})\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister()\n\t\t})\n\t}\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport Router from './components/Router'\nimport store from './store/'\nimport * as serviceWorker from './serviceWorker'\n\nimport './styles/_styles.scss'\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<Router />\n\t</Provider>,\n\tdocument.getElementById('root')\n)\n\nserviceWorker.register()\n"],"sourceRoot":""}